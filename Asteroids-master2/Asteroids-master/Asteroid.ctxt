#BlueJ class context
comment0.target=Asteroid
comment0.text=\r\n\ A\ rock\ in\ space.\r\n\ \r\n\ @author\ Poul\ Henriksen\r\n\ @author\ Michael\ K\u00F6lling\r\n
comment1.params=
comment1.target=Asteroid()
comment1.text=\r\n\ This\ is\ the\ default\ constructor\ for\ objects\ of\ type\ Asteroid\r\n\ \r\n\ @param\ None\ There\ are\ no\ parameters\r\n\ @return\ Nothing\ is\ returned\r\n
comment2.params=size
comment2.target=Asteroid(int)
comment2.text=\r\n\ Asteroid\ is\ the\ constructor\ for\ objects\ of\ type\ Asteroid.\r\n\ It\ allows\ customization\ of\ the\ size\ of\ the\ Asteroid\r\n\ \r\n\ @param\ size\ represents\ the\ size\ of\ the\ Asteroid\r\n\ @return\ An\ object\ of\ type\ Asteroid\r\n
comment3.params=size\ velocity
comment3.target=Asteroid(int,\ Vector)
comment3.text=\r\n\ Asteroid\ is\ the\ constructor\ for\ objects\ of\ type\ Asteroid.\r\n\ It\ allows\ customization\ of\ the\ size\ of\ the\ Asteroid\ and\r\n\ the\ speed\ and\ direction\ of\ the\ Asteroid\r\n\ \r\n\ @param\ size\ represents\ the\ size\ of\ the\ Asteroid\r\n\ @param\ velocity\ represents\ the\ speed\ and\ direction\ of\ the\ Asteroid\r\n\ @return\ An\ object\ of\ type\ Asteroid\r\n
comment4.params=
comment4.target=void\ act()
comment4.text=\r\n\ act\ is\ the\ method\ that\ is\ run\ on\ every\ \r\n\ iteration\ of\ the\ act\ cycle\r\n\ \r\n\ @param\ There\ are\ no\ parameters\r\n\ @return\ Nothing\ is\ returned\r\n
comment5.params=size
comment5.target=void\ setSize(int)
comment5.text=\r\n\ TODO\ (28)\:\ Declare\ a\ method\ called\ setSize\ that\ does\ not\r\n\ \ \ \ \ \ \ \ \ \ \ \ return\ anything\ and\ has\ an\ integer\ parameter\ called\ size\r\n\ \ \ \ \ \ \ \ \ \ \r\n\ TODO\ (29)\:\ Initialize\ stability\ to\ the\ size\ parameter\r\n\ \r\n\ TODO\ (30)\:\ Initialize\ the\ size\ instance\ variable\ to\ the\ size\ parameter\r\n\ \r\n\ TODO\ (31)\:\ Scale\ the\ image\ of\ this\ Asteroid\ to\ a\ width\ of\ size\ and\ a\ height\ of\ size\r\n
comment6.params=damage
comment6.target=void\ hit(int)
comment6.text=\r\n\ TODO\ (51)\:\ Declare\ a\ public\ method\ called\ hit\ that\ does\ not\r\n\ \ \ \ \ \ \ \ \ \ return\ anything\ and\ has\ an\ integer\ parameter\r\n\ \ \ \ \ \ \ \ \ \ called\ damage.\r\n\ \ \ \ \ \ \ \ \ \ \r\n\ TODO\ (52)\:\ Declare\ a\ local\ Space\ variable\ called\ space\r\n\ \ \ \ \ \ \ \ \ \ \ \ that\ stores\ a\ reference\ to\ the\ world.\r\n\ \ \ \ \ \ \ \ \ \ \r\n\ TODO\ (53)\:\ Decrease\ stability\ by\ damage.\r\n\ \r\n\ TODO\ (54)\:\ If\ the\ stability\ of\ the\ asteroid\ is\ less\ than\ or\ equal\ to\ 0...\r\n\ \r\n\ \ \ \ \ \ TODO\ (55)\:\ If\ the\ size\ of\ the\ asteroid\ is\ greater\ than\ or\ equal\ to\ 50...\r\n\ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ TODO\ (56)\:\ Use\ the\ reference\ to\ the\ world\ to\ count\ 15\ points\ to\ the\ score\r\n\ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ TODO\ (57)\:\ Otherwise,\ if\ the\ size\ of\ the\ asteroid\ is\ greater\ than\ or\ equal\ to\ 25...\r\n\ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ TODO\ (58)\:\ Use\ the\ reference\ to\ the\ world\ to\ count\ 30\ points\ to\ the\ score\r\n\ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ TODO\ (59)\:\ Otherwise...\r\n\ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ TODO\ (60)\:\ Use\ the\ reference\ to\ the\ world\ to\ count\ 50\ points\ to\ the\ score\r\n\ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ TODO\ (61)\:\ Break\ up\ the\ asteroid\ into\ a\ number\ of\ pieces\ that\ is\ 5\ or\ fewer\r\n\ \ \ \ \ \ @\r\n
comment7.params=numBreakUp
comment7.target=void\ breakUp(int)
comment7.text=\r\n\ TODO\ (34)\:\ Declare\ a\ method\ called\ breakUp\ that\ does\ not\r\n\ \ \ \ \ \ \ \ \ \ \ \ return\ anything\ and\ has\ an\ integer\ parameter\r\n\ \ \ \ \ \ \ \ \ \ \ \ called\ numBreakUp\r\n\ \ \ \ \ \ \ \ \ \ \r\n\ TODO\ (35)\:\ Declare\ a\ local\ integer\ variable\ called\ rotation\r\n\ \r\n\ TODO\ (36)\:\ Declare\ a\ local\ double\ variable\ called\ length\r\n\ \r\n\ TODO\ (37)\:\ Declare\ a\ local\ Vector\ variable\ called\ speed\r\n\ \r\n\ TODO\ (38)\:\ Declare\ a\ local\ Asteroid\ variable\ called\ debris\r\n\ \r\n\ TODO\ (39)\:\ Play\ the\ Explosion.wav\ sound\r\n\ \r\n\ TODO\ (40)\:\ If\ the\ size\ of\ the\ asteroid\ is\ less\ than\ or\ equal\ to\ 15...\r\n\ \r\n\ \ \ \ \ \ TODO\ (41)\:\ Remove\ this\ object\r\n\ \ \ \ \ \ \r\n\ TODO\ (42)\:\ Otherwise...\r\n\ \r\n\ \ \ \ \ \ TODO\ (43)\:\ Initialize\ rotation\ to\ getVelocity().getDirection()\ +\ a\ random\ number\ between\ 0\ and\ 45\r\n\ \ \ \ \ \ \r\n\ \ \ \ \ \ TODO\ (44)\:\ Initialize\ length\ to\ getVelocity().getLength()\r\n\ \ \ \ \ \ \r\n\ \ \ \ \ \ TODO\ (45)\:\ Use\ a\ loop\ that\ will\ run\ as\ many\ times\ as\ the\ asteroid\ needs\ to\ break\ up\r\n\ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ TODO\ (46)\:\ Inside\ the\ loop,\ initialize\ speed\ to\ a\ new\ Vector\ that\ uses\ direction\ plus\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ a\ random\ number\ between\ -100\ and\ 100\ and\ length\ times\ 1.2\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ TODO\ (47)\:\ Initialize\ debris\ to\ a\ new\ Asteroid\ that\ uses\ size\ divided\ by\ the\ number\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ of\ break\ ups\ as\ one\ parameter\ and\ speed\ as\ the\ second\ parameter\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ TODO\ (48)\:\ Add\ the\ debris\ object\ at\ the\ current\ X\ location\ and\ the\ current\ Y\ location\r\n\ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ TODO\ (49)\:\ Access\ the\ move\ method\ of\ debris\r\n\ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ TODO\ (50)\:\ Underneath\ the\ for\ loop,\ remove\ this\ object\r\n
numComments=8
