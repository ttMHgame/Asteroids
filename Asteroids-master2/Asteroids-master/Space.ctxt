#BlueJ class context
comment0.target=Space
comment0.text=\r\n\ Space.\ Something\ for\ rockets\ to\ fly\ in.\r\n\ \r\n\ @author\ Michael\ K\u00F6lling\r\n\ @version\ 1.0\r\n
comment1.params=
comment1.target=Space()
comment1.text=\r\n\ Create\ the\ space\ and\ all\ objects\ within\ it.\r\n
comment2.params=
comment2.target=void\ createBackground()
comment2.text=\r\n\ createBackground\ fills\ the\ background\ with\ a\ black\ colour\r\n\ \r\n\ @param\ There\ are\ no\ parameters\r\n\ @return\ Nothing\ is\ returned\r\n
comment3.params=count
comment3.target=void\ paintStars(int)
comment3.text=\r\n\ TODO\ (1)\:\ Declare\ a\ method\ called\ paintStars\ that\ does\ not\r\n\ \ \ \ \ \ \ \ \ \ \ return\ anything\ and\ has\ an\ integer\ parameter\ called\ count\r\n\ \ \ \ \ \ \ \ \ \ \r\n\ TODO\ (2)\:\ Declare\ three\ local\ integer\ variables,\ one\ called\ x,\ one\r\n\ \ \ \ \ \ \ \ \ \ \ called\ y,\ and\ one\ called\ transparency.\r\n\ \ \ \ \ \ \ \ \ \ \r\n\ TODO\ (3)\:\ Declare\ a\ local\ GreenfootImage\ variable\ called\ background\r\n\ \ \ \ \ \ \ \ \ \ \ that\ is\ initialized\ to\ the\ background\ of\ the\ world.\r\n\ \ \ \ \ \ \ \ \ \ \r\n\ TODO\ (4)\:\ Use\ a\ loop\ that\ will\ paint\ the\ correct\ number\ of\ stars\ to\ the\ world\r\n\ \ \ \ \ \ \ \ \ \ \ based\ on\ the\ count\ parameter.\ \r\n\ \r\n\ TODO\ (5)\:\ Inside\ the\ loop,\ initialize\ x\ to\ be\ a\ random\ number\ between\ 0\ and\ the\ \r\n\ \ \ \ \ \ \ \ \ \ \ width\ of\ the\ world.\ \r\n\ \ \ \ \ \ \ \ \ \ \r\n\ TODO\ (6)\:\ Inside\ the\ loop,\ initialize\ y\ to\ be\ a\ random\ number\ between\ 0\ and\ the\r\n\ \ \ \ \ \ \ \ \ \ \ height\ of\ the\ world.\r\n\ \ \ \ \ \ \ \ \ \ \r\n\ TODO\ (7)\:\ Inside\ the\ loop,\ initialize\ transparency\ to\ be\ a\ random\ number\ between\r\n\ \ \ \ \ \ \ \ \ \ \ 0\ and\ 256.\r\n\ \ \ \ \ \ \ \ \ \ \r\n\ TODO\ (8)\:\ Inside\ the\ loop,\ set\ the\ color\ of\ the\ background\ to\ be\ a\ new\ Color\ object\ \r\n\ \ \ \ \ \ \ \ \ \ \ with\ the\ values\ 255,\ 255,\ 255,\ and\ transparency\r\n\ \ \ \ \ \ \ \ \ \ \r\n\ TODO\ (9)\:\ Inside\ the\ loop,\ fill\ an\ oval\ on\ the\ background\ at\ a\ location\ of\ (x,\ y)\ \r\n\ \ \ \ \ \ \ \ \ \ \ that\ is\ 3\ pixels\ wide\ and\ 3\ pixels\ high.\r\n
comment4.params=
comment4.target=void\ prepareGame()
comment4.text=\r\n\ prepareGame\ adds\ the\ objects\ to\ the\ game\ to\ get\ the\ game\ ready\r\n\ to\ be\ played\r\n\ \r\n\ @param\ There\ are\ no\ parameters\r\n\ @return\ Nothing\ is\ returned\r\n
comment5.params=count
comment5.target=void\ addAsteroids(int)
comment5.text=\r\n\ TODO\ (63)\:\ Declare\ a\ method\ called\ addAsteroids\ that\ does\ not\r\n\ \ \ \ \ \ \ \ \ \ return\ anything\ and\ has\ an\ integer\ parameter\ called\ count\r\n\ \ \ \ \ \ \ \ \ \ \r\n\ TODO\ (64)\:\ Declare\ two\ local\ integer\ variables\ called\ x\ and\ y.\r\n\ \ \ \ \ \ \ \ \ \ \r\n\ TODO\ (65)\:\ Use\ a\ loop\ to\ add\ the\ correct\ number\ of\ asteroids\ based\ on\r\n\ \ \ \ \ \ \ \ \ \ \ \ the\ parameter\ given.\ \r\n\ \ \ \ \ \ \ \ \ \ \r\n\ TODO\ (66)\:\ Inside\ the\ loop,\ get\ a\ random\ value\ for\r\n\ \ \ \ \ \ \ \ \ \ \ \ x\ between\ 0\ and\ half\ the\ width\ of\ the\ world.\r\n\ \r\n\ TODO\ (67)\:\ Inside\ the\ loop,\ get\ a\ random\ value\ for\ y\ between\ 0\r\n\ \ \ \ \ \ \ \ \ \ \ \ and\ half\ the\ height\ of\ the\ world.\r\n\ \r\n\ TODO\ (68)\:\ Inside\ the\ loop,\ use\ the\ x\ and\ y\ values\ to\ add\ a\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ new\ Asteroid\ object\ at\ that\ location.\r\n
comment6.params=
comment6.target=void\ gameOver()
comment6.text=\r\n\ gameOver\ displays\ a\ ScoreBoard\ and\ the\ player's\ score\r\n\ after\ the\ player\ is\ destroyed\ by\ an\ asteroid\r\n\ \r\n\ @param\ There\ are\ no\ parameters\r\n\ @return\ Nothing\ is\ returned\r\n
comment7.params=
comment7.target=void\ gameWon()
comment7.text=\r\n\ gameWon\ displays\ a\ congratulatory\ ScoreBoard\ and\ the\ player's\ score\r\n\ after\ the\ player\ destroys\ all\ asteroids\r\n\ \r\n\ @param\ There\ are\ no\ parameters\r\n\ @return\ Nothing\ is\ returned\r\n
comment8.params=score
comment8.target=void\ countScore(int)
comment8.text=\r\n\ countScore\ adds\ a\ number\ of\ points\ to\ the\ score\ counter\r\n\ \r\n\ @param\ score\ is\ the\ number\ of\ points\ being\ added\ to\ the\ score\r\n\ @return\ Nothing\ is\ returned\r\n
numComments=9
